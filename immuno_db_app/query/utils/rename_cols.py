col_name_mapping_dict = {
    "affinity_rank": "affinity rank",
    "affinity_score": "affinity score",
    "all_hla_alleles": "donor HLA alleles",
    "amino_acid_position": "amino acid position",
    "area": "area",
    "biological_material": "biological material",
    "biological_replicate_nr": "biological replicate #",
    "charge": "charge",
    "command_processing": "command processing",
    "data_processing_run_id": "data processing run ID",
    "date_of_measurement": "date of measurement",
    "date_of_sample_acquisition": "date of sample acquisition",
    "delt_cn": "delta CN",
    "delt_lcn": "delta LCN",
    "delta_mass": "delta mass",
    "dignity": "dignity",
    "disease": "disease",
    "disease_name": "disease name",
    "donor": "donor",
    "donor_id": "donor ID",
    "expectation_value": "expectation value",
    "ion_frac": "ion frac",
    "is_best_spectrum": "is best spectrum",
    "is_binder": "is binder",
    "is_cell_line": "is cell line",
    "is_metastasis": "is metastasis",
    "mass_spectrometer": "mass spectrometer",
    "mass_to_charge": "mass to charge",
    "matched_ions": "matched ions",
    "mhc_class": "MHC class",
    "modification_type": "modification type",
    "ms_run_id": "MS run ID",
    "ncbi_taxonomy": "NCBI taxonomy",
    "num_matched_peptides": "matched peptides",
    "pep": "PEP",
    "peptide_mass": "peptide mass",
    "peptide_sequence": "peptide sequence",
    "percolator_score": "percolator score",
    "person_id_data_processing": "person ID data processing",
    "person_id_sample_measurement": "person ID sample measurement",
    "person_sample_acquisition": "person sample acquisition",
    "prediction_tool": "prediction tool",
    "prediction_tool_version": "prediction tool version",
    "principle_investigator": "principle investigator",
    "processing_pipeline": "processing pipeline",
    "processing_pipeline_version": "processing pipeline version",
    "processing_software": "processing software",
    "processing_software_version": "processing software version",
    "project": "project",
    "project_description": "project description",
    "project_id": "project ID",
    "project_name": "project name",
    "protein_name": "protein name",
    "psm_id": "PSM ID",
    "q_value": "q value",
    "qbic_project_id": "QBiC project ID",
    "qbic_sample_id": "QBiC sample ID",
    "reference_proteome_version": "reference proteome version",
    "retention_time": "retention time",
    "sample": "sample",
    "sample_description": "sample description",
    "sample_id": "sample ID",
    "search_engine": "search engine",
    "search_identifier": "search identifier",
    "sp_rank": "sp rank",
    "sp_score": "sp scores",
    "spectrum_reference": "spectrum reference",
    "technical_replicate_nr": "technical replicate #",
    "total_ions": "total ions",
    "treatment": "treatment",
    "uniprot_id": "UniProt ID",
    "x_corr": "x-corr"
}


def rename_cols(col_name):
    if col_name in col_name_mapping_dict.keys():
        return col_name_mapping_dict[col_name]
    else:
        return col_name
